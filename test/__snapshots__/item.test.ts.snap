// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Item Class Tests (No AWS Operations) Correctly returns parsed value and throws for invalid 1`] = `
Object {
  "id": "foo",
}
`;

exports[`Item Class Tests (No AWS Operations) Gets the primary attribute from a specified item 1`] = `
Object {
  "id": "test",
}
`;

exports[`Item Class Tests (No AWS Operations) Gets the primary attribute from a specified item 2`] = `"Unable to find primary key \\"id\\" in provided object."`;

exports[`Item Retrieval Tests (AWS Operations) Gets all items from the database 1`] = `
Array [
  ItemInstance {
    "attributes": Object {
      "id": "test",
    },
    "origin": Item {
      "DocumentClient": DocumentClient {
        "attrValue": "S6",
        "options": Object {
          "attrValue": "S6",
          "endpoint": "http://127.0.0.1:8000",
          "region": "us-west-2",
          "sslEnabled": false,
        },
        "service": Object {
          "CALL_EVENTS_BUBBLE": [Function],
          "MONITOR_EVENTS_BUBBLE": [Function],
          "_clientId": 1,
          "_events": Object {
            "apiCall": Array [
              [Function],
            ],
            "apiCallAttempt": Array [
              [Function],
            ],
          },
          "config": Config {
            "apiVersion": null,
            "apiVersions": Object {},
            "clientSideMonitoring": false,
            "computeChecksums": true,
            "convertResponseTypes": true,
            "correctClockSkew": false,
            "credentialProvider": CredentialProviderChain {
              "providers": Array [
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
                [Function],
              ],
              "resolveCallbacks": Array [],
            },
            "credentials": EnvironmentCredentials {
              "accessKeyId": "access-key",
              "envPrefix": "AWS",
              "expireTime": null,
              "expired": false,
              "refreshCallbacks": Array [],
              "sessionToken": undefined,
            },
            "customUserAgent": null,
            "dynamoDbCrc32": true,
            "endpoint": "http://127.0.0.1:8000",
            "endpointCacheSize": 1000,
            "endpointDiscoveryEnabled": undefined,
            "hostPrefixEnabled": true,
            "httpOptions": Object {
              "timeout": 120000,
            },
            "logger": null,
            "maxRedirects": 10,
            "maxRetries": undefined,
            "paramValidation": true,
            "region": "us-west-2",
            "retryDelayOptions": Object {},
            "s3BucketEndpoint": false,
            "s3DisableBodySigning": true,
            "s3ForcePathStyle": false,
            "s3UsEast1RegionalEndpoint": "legacy",
            "s3UseArnRegion": undefined,
            "signatureCache": true,
            "signatureVersion": null,
            "sslEnabled": false,
            "stsRegionalEndpoints": "legacy",
            "systemClockOffset": 0,
            "useAccelerateEndpoint": false,
          },
          "endpoint": Endpoint {
            "host": "127.0.0.1:8000",
            "hostname": "127.0.0.1",
            "href": "http://127.0.0.1:8000/",
            "path": "/",
            "pathname": "/",
            "port": 8000,
            "protocol": "http:",
          },
        },
      },
      "primaryAttributeNames": Array [
        "id",
      ],
      "schema": Object {
        "shape": Object {
          "id": Object {
            "checks": Array [
              Object {
                "check": [Function],
              },
            ],
            "t": "string",
            "validation": Object {},
          },
        },
        "t": "object",
      },
      "tableName": "my-table",
    },
  },
]
`;

exports[`Item Retrieval Tests (AWS Operations) Gets an item from the database 1`] = `
ItemInstance {
  "attributes": Object {
    "id": "test",
  },
  "origin": Item {
    "DocumentClient": DocumentClient {
      "attrValue": "S6",
      "options": Object {
        "attrValue": "S6",
        "endpoint": "http://127.0.0.1:8000",
        "region": "us-west-2",
        "sslEnabled": false,
      },
      "service": Object {
        "CALL_EVENTS_BUBBLE": [Function],
        "MONITOR_EVENTS_BUBBLE": [Function],
        "_clientId": 1,
        "_events": Object {
          "apiCall": Array [
            [Function],
          ],
          "apiCallAttempt": Array [
            [Function],
          ],
        },
        "config": Config {
          "apiVersion": null,
          "apiVersions": Object {},
          "clientSideMonitoring": false,
          "computeChecksums": true,
          "convertResponseTypes": true,
          "correctClockSkew": false,
          "credentialProvider": CredentialProviderChain {
            "providers": Array [
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
              [Function],
            ],
            "resolveCallbacks": Array [],
          },
          "credentials": EnvironmentCredentials {
            "accessKeyId": "access-key",
            "envPrefix": "AWS",
            "expireTime": null,
            "expired": false,
            "refreshCallbacks": Array [],
            "sessionToken": undefined,
          },
          "customUserAgent": null,
          "dynamoDbCrc32": true,
          "endpoint": "http://127.0.0.1:8000",
          "endpointCacheSize": 1000,
          "endpointDiscoveryEnabled": undefined,
          "hostPrefixEnabled": true,
          "httpOptions": Object {
            "timeout": 120000,
          },
          "logger": null,
          "maxRedirects": 10,
          "maxRetries": undefined,
          "paramValidation": true,
          "region": "us-west-2",
          "retryDelayOptions": Object {},
          "s3BucketEndpoint": false,
          "s3DisableBodySigning": true,
          "s3ForcePathStyle": false,
          "s3UsEast1RegionalEndpoint": "legacy",
          "s3UseArnRegion": undefined,
          "signatureCache": true,
          "signatureVersion": null,
          "sslEnabled": false,
          "stsRegionalEndpoints": "legacy",
          "systemClockOffset": 0,
          "useAccelerateEndpoint": false,
        },
        "endpoint": Endpoint {
          "host": "127.0.0.1:8000",
          "hostname": "127.0.0.1",
          "href": "http://127.0.0.1:8000/",
          "path": "/",
          "pathname": "/",
          "port": 8000,
          "protocol": "http:",
        },
      },
    },
    "primaryAttributeNames": Array [
      "id",
    ],
    "schema": Object {
      "shape": Object {
        "id": Object {
          "checks": Array [
            Object {
              "check": [Function],
            },
          ],
          "t": "string",
          "validation": Object {},
        },
      },
      "t": "object",
    },
    "tableName": "my-table",
  },
}
`;
